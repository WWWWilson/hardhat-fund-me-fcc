{
  "address": "0x8E66f323630F332998004052FF4fE5ebDEc6D437",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperwithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5db662be26b3f55df910602000b60d2cac52c8272f890cda9a88dd30e7f5f585",
  "receipt": {
    "to": null,
    "from": "0x3Caf406AB89CD4845863C1615aC47aCb8225C3Ac",
    "contractAddress": "0x8E66f323630F332998004052FF4fE5ebDEc6D437",
    "transactionIndex": 26,
    "gasUsed": "1103092",
    "logsBloom": "0x
    "blockHash": "0x8d67f42c8a4e1ad233f398a306e646fbea9d1ce04146ef25c7b4754ab611c760",
    "transactionHash": "0x5db662be26b3f55df910602000b60d2cac52c8272f890cda9a88dd30e7f5f585",
    "logs": [],
    "blockNumber": 7066896,
    "cumulativeGasUsed": "4655420",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "bf57bf9b39071b515b98405a34a1d2d0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperwithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"wilson\",\"details\":\"implements price feeds \",\"kind\":\"dev\",\"methods\":{},\"title\":\"\\u4e00\\u4e2a\\u7528\\u4e8e\\u4f17\\u7b79\\u7684\\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u8be5\\u5408\\u7ea6\\u662f\\u4e00\\u4e2a\\u4f17\\u7b79\\u5408\\u7ea6\\u7684\\u793a\\u4f8b\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;    \\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title \\u4e00\\u4e2a\\u7528\\u4e8e\\u4f17\\u7b79\\u7684\\u5408\\u7ea6\\n * @author wilson\\n * @notice \\u8be5\\u5408\\u7ea6\\u662f\\u4e00\\u4e2a\\u4f17\\u7b79\\u5408\\u7ea6\\u7684\\u793a\\u4f8b\\n * @dev implements price feeds\\n * \\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  \\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    constructor(address priceFeedAddress) {\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return s_priceFeed.version();\\n    }\\n    \\n    function withdraw() public payable onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperwithdraw() public payable onlyOwner{\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n         (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n        \\n    }\\n\\n    function getFunders(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x1fed05fa20e598f9992551a1b41fd9fb7609850a2586c37491d1bac7d4ba3ddc\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        //address 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        return uint(price * 1e10);\\n    }\\n \\n    function getVersion() internal view returns (uint256){\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed) internal view returns (uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x5c086007fd3db5fa18f5bcbccf12d786f932586ea2a631234605d488b9749e58\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200141c3803806200141c833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611296620001866000396000818161045a0152818161069a01528181610890015261096d01526112966000f3fe60806040526004361061008a5760003560e01c806367bf350b1161005957806367bf350b146101525780636b69a5921461015c578063893d20e8146101875780639e87a5cd146101b2578063b60d4288146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633a7b6c741461010b5780633ccfd60b1461014857610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610ba1565b610321565b6040516100d79190610be7565b60405180910390f35b3480156100ec57600080fd5b506100f5610369565b6040516101029190610be7565b60405180910390f35b34801561011757600080fd5b50610132600480360381019061012d9190610c2e565b610410565b60405161013f9190610c6a565b60405180910390f35b610150610458565b005b61015a610698565b005b34801561016857600080fd5b5061017161095c565b60405161017e9190610be7565b60405180910390f35b34801561019357600080fd5b5061019c610969565b6040516101a99190610c6a565b60405180910390f35b3480156101be57600080fd5b506101c7610991565b6040516101d49190610ce4565b60405180910390f35b6101e56101e7565b005b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109bb90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d5c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610dab565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610e16565b905090565b60006001828154811061042657610425610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104dd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105885760006001828154811061050357610502610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061058090610e72565b9150506104e0565b50600067ffffffffffffffff8111156105a4576105a3610ebb565b5b6040519080825280602002602001820160405280156105d25781602001602082028036833780820191505090505b50600190805190602001906105e8929190610a97565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161060f90610f1b565b60006040518083038185875af1925050503d806000811461064c576040519150601f19603f3d011682016040523d82523d6000602084013e610651565b606091505b5050905080610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c90610f7c565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610757575b5050505050905060005b815181101561082b5760008282815181106107c9576107c8610e43565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082390610e72565b9150506107ab565b50600067ffffffffffffffff81111561084757610846610ebb565b5b6040519080825280602002602001820160405280156108755781602001602082028036833780820191505090505b506001908051906020019061088b929190610a97565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d290610f1b565b60006040518083038185875af1925050503d806000811461090f576040519150601f19603f3d011682016040523d82523d6000602084013e610914565b606091505b5050905080610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90610f7c565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806109c7836109f7565b90506000670de0b6b3a764000085836109e09190610f9c565b6109ea9190611025565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a4057600080fd5b505afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906110ce565b5050509150506402540be40081610a8f9190611149565b915050919050565b828054828255906000526020600020908101928215610b10579160200282015b82811115610b0f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ab7565b5b509050610b1d9190610b21565b5090565b5b80821115610b3a576000816000905550600101610b22565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6e82610b43565b9050919050565b610b7e81610b63565b8114610b8957600080fd5b50565b600081359050610b9b81610b75565b92915050565b600060208284031215610bb757610bb6610b3e565b5b6000610bc584828501610b8c565b91505092915050565b6000819050919050565b610be181610bce565b82525050565b6000602082019050610bfc6000830184610bd8565b92915050565b610c0b81610bce565b8114610c1657600080fd5b50565b600081359050610c2881610c02565b92915050565b600060208284031215610c4457610c43610b3e565b5b6000610c5284828501610c19565b91505092915050565b610c6481610b63565b82525050565b6000602082019050610c7f6000830184610c5b565b92915050565b6000819050919050565b6000610caa610ca5610ca084610b43565b610c85565b610b43565b9050919050565b6000610cbc82610c8f565b9050919050565b6000610cce82610cb1565b9050919050565b610cde81610cc3565b82525050565b6000602082019050610cf96000830184610cd5565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d46601b83610cff565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db682610bce565b9150610dc183610bce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df657610df5610d7c565b5b828201905092915050565b600081519050610e1081610c02565b92915050565b600060208284031215610e2c57610e2b610b3e565b5b6000610e3a84828501610e01565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e7d82610bce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb057610eaf610d7c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f05600083610eea565b9150610f1082610ef5565b600082019050919050565b6000610f2682610ef8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f66600b83610cff565b9150610f7182610f30565b602082019050919050565b60006020820190508181036000830152610f9581610f59565b9050919050565b6000610fa782610bce565b9150610fb283610bce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610feb57610fea610d7c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103082610bce565b915061103b83610bce565b92508261104b5761104a610ff6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61107581611056565b811461108057600080fd5b50565b6000815190506110928161106c565b92915050565b6000819050919050565b6110ab81611098565b81146110b657600080fd5b50565b6000815190506110c8816110a2565b92915050565b600080600080600060a086880312156110ea576110e9610b3e565b5b60006110f888828901611083565b9550506020611109888289016110b9565b945050604061111a88828901610e01565b935050606061112b88828901610e01565b925050608061113c88828901611083565b9150509295509295909350565b600061115482611098565b915061115f83611098565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561119e5761119d610d7c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111db576111da610d7c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561121857611217610d7c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561125557611254610d7c565b5b82820290509291505056fea2646970667358221220b444a129eaecd7a4b1f911ecf684d18109d169c2ff48d45befec111237343b2664736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c806367bf350b1161005957806367bf350b146101525780636b69a5921461015c578063893d20e8146101875780639e87a5cd146101b2578063b60d4288146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633a7b6c741461010b5780633ccfd60b1461014857610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610ba1565b610321565b6040516100d79190610be7565b60405180910390f35b3480156100ec57600080fd5b506100f5610369565b6040516101029190610be7565b60405180910390f35b34801561011757600080fd5b50610132600480360381019061012d9190610c2e565b610410565b60405161013f9190610c6a565b60405180910390f35b610150610458565b005b61015a610698565b005b34801561016857600080fd5b5061017161095c565b60405161017e9190610be7565b60405180910390f35b34801561019357600080fd5b5061019c610969565b6040516101a99190610c6a565b60405180910390f35b3480156101be57600080fd5b506101c7610991565b6040516101d49190610ce4565b60405180910390f35b6101e56101e7565b005b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109bb90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d5c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610dab565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610e16565b905090565b60006001828154811061042657610425610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104dd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105885760006001828154811061050357610502610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061058090610e72565b9150506104e0565b50600067ffffffffffffffff8111156105a4576105a3610ebb565b5b6040519080825280602002602001820160405280156105d25781602001602082028036833780820191505090505b50600190805190602001906105e8929190610a97565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161060f90610f1b565b60006040518083038185875af1925050503d806000811461064c576040519150601f19603f3d011682016040523d82523d6000602084013e610651565b606091505b5050905080610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c90610f7c565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610757575b5050505050905060005b815181101561082b5760008282815181106107c9576107c8610e43565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082390610e72565b9150506107ab565b50600067ffffffffffffffff81111561084757610846610ebb565b5b6040519080825280602002602001820160405280156108755781602001602082028036833780820191505090505b506001908051906020019061088b929190610a97565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d290610f1b565b60006040518083038185875af1925050503d806000811461090f576040519150601f19603f3d011682016040523d82523d6000602084013e610914565b606091505b5050905080610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90610f7c565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806109c7836109f7565b90506000670de0b6b3a764000085836109e09190610f9c565b6109ea9190611025565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a4057600080fd5b505afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906110ce565b5050509150506402540be40081610a8f9190611149565b915050919050565b828054828255906000526020600020908101928215610b10579160200282015b82811115610b0f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ab7565b5b509050610b1d9190610b21565b5090565b5b80821115610b3a576000816000905550600101610b22565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6e82610b43565b9050919050565b610b7e81610b63565b8114610b8957600080fd5b50565b600081359050610b9b81610b75565b92915050565b600060208284031215610bb757610bb6610b3e565b5b6000610bc584828501610b8c565b91505092915050565b6000819050919050565b610be181610bce565b82525050565b6000602082019050610bfc6000830184610bd8565b92915050565b610c0b81610bce565b8114610c1657600080fd5b50565b600081359050610c2881610c02565b92915050565b600060208284031215610c4457610c43610b3e565b5b6000610c5284828501610c19565b91505092915050565b610c6481610b63565b82525050565b6000602082019050610c7f6000830184610c5b565b92915050565b6000819050919050565b6000610caa610ca5610ca084610b43565b610c85565b610b43565b9050919050565b6000610cbc82610c8f565b9050919050565b6000610cce82610cb1565b9050919050565b610cde81610cc3565b82525050565b6000602082019050610cf96000830184610cd5565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d46601b83610cff565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db682610bce565b9150610dc183610bce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df657610df5610d7c565b5b828201905092915050565b600081519050610e1081610c02565b92915050565b600060208284031215610e2c57610e2b610b3e565b5b6000610e3a84828501610e01565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e7d82610bce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb057610eaf610d7c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f05600083610eea565b9150610f1082610ef5565b600082019050919050565b6000610f2682610ef8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f66600b83610cff565b9150610f7182610f30565b602082019050919050565b60006020820190508181036000830152610f9581610f59565b9050919050565b6000610fa782610bce565b9150610fb283610bce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610feb57610fea610d7c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103082610bce565b915061103b83610bce565b92508261104b5761104a610ff6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61107581611056565b811461108057600080fd5b50565b6000815190506110928161106c565b92915050565b6000819050919050565b6110ab81611098565b81146110b657600080fd5b50565b6000815190506110c8816110a2565b92915050565b600080600080600060a086880312156110ea576110e9610b3e565b5b60006110f888828901611083565b9550506020611109888289016110b9565b945050604061111a88828901610e01565b935050606061112b88828901610e01565b925050608061113c88828901611083565b9150509295509295909350565b600061115482611098565b915061115f83611098565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561119e5761119d610d7c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111db576111da610d7c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561121857611217610d7c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561125557611254610d7c565b5b82820290509291505056fea2646970667358221220b444a129eaecd7a4b1f911ecf684d18109d169c2ff48d45befec111237343b2664736f6c63430008080033",
  "devdoc": {
    "author": "wilson",
    "details": "implements price feeds ",
    "kind": "dev",
    "methods": {},
    "title": "一个用于众筹的合约",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "该合约是一个众筹合约的示例",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}